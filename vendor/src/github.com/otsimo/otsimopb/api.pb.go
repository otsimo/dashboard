// Code generated by protoc-gen-gogo.
// source: api.proto
// DO NOT EDIT!

package otsimopb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for ApiService service

type ApiServiceClient interface {
	// Profile
	AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error)
	GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error)
	UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error)
	// Child
	AddChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error)
	GetChild(ctx context.Context, in *GetChildRequest, opts ...grpc.CallOption) (*Child, error)
	UpdateChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error)
	GetChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error)
	UpdateGameEntry(ctx context.Context, in *GameEntryRequest, opts ...grpc.CallOption) (*Response, error)
	ChangeActivation(ctx context.Context, in *ChangeChildActivationRequest, opts ...grpc.CallOption) (*Response, error)
	GetDisabledChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error)
	SoundEnable(ctx context.Context, in *SoundEnableRequest, opts ...grpc.CallOption) (*Response, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) AddProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/AddProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetProfile(ctx context.Context, in *GetProfileRequest, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/UpdateProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) AddChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/AddChild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChild(ctx context.Context, in *GetChildRequest, opts ...grpc.CallOption) (*Child, error) {
	out := new(Child)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetChild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateChild(ctx context.Context, in *Child, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/UpdateChild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error) {
	out := new(GetChildrenFromProfileResponse)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetChildren", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) UpdateGameEntry(ctx context.Context, in *GameEntryRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/UpdateGameEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ChangeActivation(ctx context.Context, in *ChangeChildActivationRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/ChangeActivation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetDisabledChildren(ctx context.Context, in *GetChildrenFromProfileRequest, opts ...grpc.CallOption) (*GetChildrenFromProfileResponse, error) {
	out := new(GetChildrenFromProfileResponse)
	err := grpc.Invoke(ctx, "/apipb.ApiService/GetDisabledChildren", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SoundEnable(ctx context.Context, in *SoundEnableRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/apipb.ApiService/SoundEnable", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiService service

type ApiServiceServer interface {
	// Profile
	AddProfile(context.Context, *Profile) (*Response, error)
	GetProfile(context.Context, *GetProfileRequest) (*Profile, error)
	UpdateProfile(context.Context, *Profile) (*Response, error)
	// Child
	AddChild(context.Context, *Child) (*Response, error)
	GetChild(context.Context, *GetChildRequest) (*Child, error)
	UpdateChild(context.Context, *Child) (*Response, error)
	GetChildren(context.Context, *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error)
	UpdateGameEntry(context.Context, *GameEntryRequest) (*Response, error)
	ChangeActivation(context.Context, *ChangeChildActivationRequest) (*Response, error)
	GetDisabledChildren(context.Context, *GetChildrenFromProfileRequest) (*GetChildrenFromProfileResponse, error)
	SoundEnable(context.Context, *SoundEnableRequest) (*Response, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_AddProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).AddProfile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetProfile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).UpdateProfile(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_AddChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Child)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).AddChild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetChildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetChild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_UpdateChild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Child)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).UpdateChild(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetChildrenFromProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetChildren(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_UpdateGameEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GameEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).UpdateGameEntry(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_ChangeActivation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ChangeChildActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).ChangeActivation(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_GetDisabledChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetChildrenFromProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).GetDisabledChildren(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ApiService_SoundEnable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(SoundEnableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ApiServiceServer).SoundEnable(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apipb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddProfile",
			Handler:    _ApiService_AddProfile_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _ApiService_GetProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _ApiService_UpdateProfile_Handler,
		},
		{
			MethodName: "AddChild",
			Handler:    _ApiService_AddChild_Handler,
		},
		{
			MethodName: "GetChild",
			Handler:    _ApiService_GetChild_Handler,
		},
		{
			MethodName: "UpdateChild",
			Handler:    _ApiService_UpdateChild_Handler,
		},
		{
			MethodName: "GetChildren",
			Handler:    _ApiService_GetChildren_Handler,
		},
		{
			MethodName: "UpdateGameEntry",
			Handler:    _ApiService_UpdateGameEntry_Handler,
		},
		{
			MethodName: "ChangeActivation",
			Handler:    _ApiService_ChangeActivation_Handler,
		},
		{
			MethodName: "GetDisabledChildren",
			Handler:    _ApiService_GetDisabledChildren_Handler,
		},
		{
			MethodName: "SoundEnable",
			Handler:    _ApiService_SoundEnable_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptorApi = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x52, 0xcb, 0x4e, 0xf2, 0x40,
	0x14, 0xe6, 0xff, 0x0d, 0x06, 0x0f, 0x08, 0x66, 0x4c, 0xbc, 0x74, 0xc1, 0xc2, 0x4b, 0x62, 0x62,
	0x2c, 0x09, 0x6e, 0x74, 0xe1, 0x02, 0x11, 0x71, 0xa7, 0x01, 0xdd, 0x18, 0x37, 0x2d, 0x3d, 0x94,
	0x49, 0xda, 0x4e, 0xed, 0x4c, 0x49, 0x7c, 0x0b, 0x9f, 0xc1, 0x47, 0x71, 0xc5, 0x92, 0x47, 0xf0,
	0xf2, 0x22, 0x0e, 0xd3, 0x0e, 0x28, 0x81, 0xa8, 0x0b, 0x17, 0x93, 0xcc, 0xf7, 0x9d, 0xf3, 0x5d,
	0xa6, 0x29, 0x2c, 0x59, 0x21, 0x35, 0xc3, 0x88, 0x09, 0x46, 0xb2, 0xf2, 0x1a, 0xda, 0x46, 0xd1,
	0x47, 0xce, 0x2d, 0x17, 0x79, 0x42, 0x1b, 0x05, 0x9f, 0x39, 0xe8, 0x69, 0x74, 0xe0, 0x52, 0xd1,
	0x8b, 0x6d, 0xb3, 0xc3, 0xfc, 0x8a, 0xcb, 0x5c, 0x56, 0x51, 0xb4, 0x1d, 0x77, 0x15, 0x52, 0x40,
	0xdd, 0x92, 0xf5, 0xea, 0x73, 0x16, 0xa0, 0x16, 0xd2, 0x36, 0x46, 0x7d, 0xda, 0x41, 0x52, 0x91,
	0xc8, 0x71, 0xae, 0x22, 0xd6, 0xa5, 0x1e, 0x92, 0xa2, 0xa9, 0x12, 0xcd, 0x14, 0x1b, 0xa5, 0x14,
	0xb7, 0x90, 0x87, 0x2c, 0xe0, 0xb8, 0x95, 0x21, 0x47, 0x00, 0x4d, 0x14, 0x5a, 0xb0, 0x91, 0x2e,
	0x4c, 0xa8, 0x16, 0xde, 0xc7, 0xc8, 0x85, 0x31, 0x65, 0x25, 0x95, 0x55, 0x58, 0xbe, 0x09, 0x1d,
	0x4b, 0xe0, 0x2f, 0xd2, 0xf6, 0x21, 0x27, 0xeb, 0xd5, 0x7b, 0xd4, 0x73, 0x48, 0x21, 0x1d, 0x2b,
	0x34, 0x6b, 0xb9, 0x0a, 0x39, 0xd9, 0x23, 0x59, 0x5e, 0x9b, 0x14, 0x53, 0x84, 0xae, 0xf5, 0xc5,
	0x44, 0x6a, 0x4c, 0xc8, 0x27, 0xa5, 0x7e, 0x98, 0x71, 0x07, 0x79, 0x6d, 0x19, 0x61, 0x40, 0x76,
	0xa6, 0x62, 0x24, 0x77, 0x1e, 0x31, 0x7f, 0xea, 0x5b, 0xec, 0x7e, 0xb3, 0x35, 0x76, 0x3f, 0x81,
	0x52, 0xd2, 0xa6, 0x69, 0xf9, 0xd8, 0x08, 0x44, 0xf4, 0x40, 0xd6, 0xb5, 0x56, 0x33, 0xda, 0x74,
	0x46, 0xb9, 0x0b, 0x58, 0xa9, 0xf7, 0xac, 0xc0, 0xc5, 0x5a, 0x47, 0xd0, 0xbe, 0x25, 0x28, 0x0b,
	0xc8, 0xf6, 0xf8, 0x45, 0xa3, 0x81, 0x8a, 0x9f, 0x4c, 0xe7, 0x79, 0x11, 0x1b, 0x56, 0x65, 0xd9,
	0x33, 0xca, 0x2d, 0xdb, 0x43, 0xe7, 0x4f, 0x9e, 0x4b, 0x8e, 0x21, 0xdf, 0x66, 0x71, 0xe0, 0x34,
	0x82, 0x51, 0x08, 0xd9, 0x4c, 0x55, 0x9f, 0xb8, 0x79, 0xf5, 0x4e, 0xf7, 0x06, 0xaf, 0xe5, 0xcc,
	0x50, 0x9e, 0xc1, 0x5b, 0xf9, 0xdf, 0x50, 0x9e, 0x17, 0x79, 0x1e, 0xdf, 0xcb, 0x99, 0xdb, 0x1c,
	0x13, 0x9c, 0xfa, 0x2c, 0xb4, 0x9f, 0xfe, 0x2f, 0x5c, 0x5e, 0xb7, 0xed, 0x45, 0xf5, 0xd7, 0x1f,
	0x7e, 0x04, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x12, 0x52, 0xd0, 0x56, 0x03, 0x00, 0x00,
}
